# This file is being maintained by Puppet.
# DO NOT EDIT
#
#
# Example config file /etc/vsftpd/vsftpd.conf
#
# The default compiled in settings are fairly paranoid. This sample file
# loosens things up a bit, to make the ftp daemon more usable.
# Please see vsftpd.conf.5 for all compiled in defaults.
#
# READ THIS: This example file is NOT an exhaustive list of vsftpd options.
# Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd's
# capabilities.
#
#
####################
##### General ######
####################

# When enabled, and vsftpd is started in "listen" mode, vsftpd will background
# the listener process. i.e. control will immediately be returned to the shell
# which launched vsftpd.
background=YES

# Note! This option only has an effect for non-PAM builds of vsftpd. If disabled,
# vsftpd will not check /etc/shells for a valid user shell for local logins.
check_shell=YES

# This is the name of the user we use for handling anonymous FTP.
# The home directory of this user is the root of the anonymous FTP area.
# Default: ftp
ftp_username=ftp

# You may fully customise the login banner string:
ftpd_banner=Welcome to blah FTP service.

# Uncomment this to allow local users to log in.
local_enable=YES


# Default umask for local users is 077. You may wish to change this to 022,
# if your users expect that (022 is used by most other ftpd's)
local_umask=022

# Allow anonymous FTP? (Beware - allowed by default if you comment this out).
anonymous_enable=NO

# Set this to "YES" to allow the anonymous FTP user to upload files. This only
# has an effect if the above global write enable is activated. Also, you will
# obviously need to create a directory writable by the FTP user.
anon_upload_enable=YES

# Set this to to "YES" if you want the anonymous FTP user to be able to create
# new directories.
anon_mkdir_write_enable=YES

# If set to YES, anonymous users will be permitted to perform write operations
# other than upload and create directory, such as deletion and renaming.
# This is generally not recommended but included for completeness.
anon_other_write_enable=YES

# The value that the umask for file creation is set to for anonymous users.
# NOTE! If you want to specify octal values, remember the "0" prefix otherwise
# the value will be treated as a base 10 integer!
# Default: 077
anon_umask=077

# The permissions with which uploaded files are created. Umasks are applied on
# top of this value. You may wish to change to 0777 if you want uploaded files to be executable.
# Default: 0666
file_open_mode=0666


# This controls whether vsftpd attempts to maintain sessions for logins. If
# vsftpd is maintaining sessions, it will try and update utmp and wtmp. It will 
# also open a pam_session if using PAM to authenticate, and only close this
# upon logout. You may wish to disable this if you do not need session logging, 
# and you wish to give vsftpd more opportunity to run with less processes and/or
# less privilege. NOTE - utmp and wtmp support is only provided with PAM enabled builds.
# Default: YES
session_support=NO

# Uncomment this to enable any form of FTP write command.
write_enable=YES

# If enabled, vsftpd will display directory listings with the time in your local
# time zone. The default is to display GMT. The times returned by the MDTM FTP
# command are also affected by this option.
# Default: NO
use_localtime=NO

# Activate directory messages - messages given to remote users when they
# go into a certain directory.
dirmessage_enable=YES
# This option is the name of the file we look for when a new directory is entered.
# The contents are displayed to the remote user. This option is only relevant if
# the option dirmessage_enable is enabled.
# Default: .message
message_file=.message

# It is recommended that you define on your system a unique user which the
# ftp server can use as a totally isolated and unprivileged user. Default is "nobody".
nopriv_user=everybody

# If you want, you can arrange for uploaded anonymous files to be owned by
# a different user. Note! Using "root" for uploaded files is not
# recommended! Default for chown_uploads is "NO". Default chown_user is "root".
chown_uploads=NO

# By default, numeric IDs are shown in the user and group fields of directory
# listings. You can get textual names by enabling this parameter.
# It is off by default for performance reasons.
text_userdb_names=YES

# If activated, files and directories starting with . will be shown in directory
# listings even if the "a" flag was not used by the client.
# This override excludes the "." and ".." entries.
# Default: NO
force_dot_files=NO

# When enabled, this setting will allow MDTM to set file modification times
# (subject to the usual access checks).
# Default: YES
mdtm_write=YES

# If enabled, virtual users will use the same privileges as local users.
# By default, virtual users will use the same privileges as anonymous users,
# which tends to be more restrictive (especially in terms of write access).
# Default: NO
virtual_use_local_privs=NO


####################
##### Server  ######
####################

# When "listen" directive is enabled, vsftpd runs in standalone mode and
# listens on IPv4 sockets. This directive cannot be used in conjunction
# with the listen_ipv6 directive. Default value is "YES"
listen=YES
listen_port=211

# To enable ipv6 support you can not listen to ipv4. VSFTPD requires you to
# run two copies of vsftpd with two configuration files. Default value is "NO"

# An internal setting used for testing the relative benefit of using the
# sendfile() system call on your platform.
use_sendfile=YES

# You may specify an explicit list of local users to chroot() to their home
# directory. If chroot_local_user is YES, then this list becomes a list of
# users to NOT chroot(). Default NO.
chroot_local_user=NO
chroot_list_enable=NO

# If you want the chroot environment to be writable you will need to set 
# allow_writeable_chroot=YES. Otherwise vsftpd because of default security
# settings will complain if it detects that chroot is writable.
# allow_writeable_chroot=NO

ssl_enable=NO

# You may activate the "-R" option to the builtin ls. This is disabled by
# default to avoid remote users being able to cause excessive I/O on large
# sites. However, some broken FTP clients such as "ncftp" and "mirror" assume
# the presence of the "-R" option, so there is a strong case for enabling it.
# Default is "NO"
ls_recurse_enable=YES

# If enabled, vsftpd will try and resolve pathnames such as ~chris/pics, i.e.
# a tilde followed by a username. Note that vsftpd will always resolve the
# pathnames ~ and ~/something (in this case the ~ resolves to the initial login
# directory). Note that ~user paths will only resolve if the file /etc/passwd
# may be found within the _current_ chroot() jail.
# Default: NO
tilde_user_enable=NO


####################
##### Logging ######
####################

# If enabled, then any log output which would have gone to /var/log/vsftpd.log
# goes to the system log instead. Logging is done under the FTPD facility.
syslog_enable=NO

# Activate logging of uploads/downloads.
xferlog_enable=YES

# You may override where the log file goes if you like. The default is: /var/log/xferlog
xferlog_file=/var/log/xferlog_not_default

# If you want, you can have your log file in standard ftpd xferlog format.
# Note that the default log file location is /var/log/xferlog in this case.
xferlog_std_format=YES

# If enabled, two log files are generated in parallel, going by default to
# /var/log/xferlog and /var/log/vsftpd.log. The former is a wu-ftpd style
# transfer log, parseable by standard tools. The latter is vsftpd's own style log.
dual_log_enable=NO

# When enabled, all FTP requests and responses are logged, providing the option
# xferlog_std_format is not enabled. Useful for debugging.
log_ftp_protocol=NO

# When enabled, this prevents vsftpd from taking a file lock when writing to
# log files. This option should generally not be enabled. It exists to workaround
# operating system bugs such as the Solaris / Veritas filesystem combination
# which has been observed to sometimes exhibit hangs trying to lock log files.
no_log_lock=NO

# This option is the name of the file to which we write the vsftpd style log file.
# This log is only written if the option xferlog_enable is set, and
# xferlog_std_format is NOT set. Alternatively, it is written if you have set
# the option dual_log_enable. One further complication - if you have set
# syslog_enable, then this file is not written and output is sent to the
# system log instead.
vsftpd_log_file=/var/log/vsftpd.log

####################
#### Security ######
####################

# When enabled, allows use of the SITE CHMOD command.
# NOTE! This only applies to local users. Anonymous users never get to use SITE CHMOD.
# Default: YES
chmod_enable=YES

# If set to NO, all directory list commands will give permission denied.
# Default: YES
dirlist_enable=YES

# If set to NO, all download requests will give permission denied.
# Default: YES
download_enable=YES

# When enabled, all uploads proceed with a write lock on the upload file. All
# downloads proceed with a shared read lock on the download file.
# WARNING! Before enabling this, be aware that malicious readers could starve
# a writer wanting to e.g. append a file.
# Default: YES
lock_upload_files=NO

# When enabled, anonymous users will only be allowed to download files which
# are world readable. This is recognising that the ftp user may own files,
# especially in the presence of uploads.
# Default: YES
anon_world_readable_only=YES

# You may specify a file of disallowed anonymous e-mail addresses. Apparently
# useful for combatting certain DoS attacks.
deny_email_enable=YES
banned_email_file=/etc/vsftpd/banned_emails_file

# This string is the name of the PAM service vsftpd will use. Default: ftp
pam_service_name=ftpd

# If enabled, along with chroot_local_user , then a chroot() jail location may
# be specified on a per-user basis. Each user's jail is derived from their
# home directory string in /etc/passwd. The occurrence of /./ in the home
# directory string denotes that the jail is at that particular location in the path.
# Default: NO
passwd_chroot_enable=NO

# This option should be the name of a directory which is empty. Also, the
# directory should not be writable by the ftp user. This directory is used as a
# secure chroot() jail at times vsftpd does not require filesystem access.
# Default: /usr/share/empty
secure_chroot_dir=/var/run/vsftpd/empty

# If enabled, vsftpd will load a list of usernames, from the filename given by
# userlist_file. If a user tries to log in using a name in this file, they will
# be denied before they are asked for a password. This may be useful in
# preventing cleartext passwords being transmitted. See also userlist_deny.
# Default: NO
userlist_enable=YES
# This option is the name of the file loaded when the userlist_enable option is active.
# Default: /etc/vsftpd.user_list
userlist_file=/etc/vsftpd/user_list
# This option is examined if userlist_enable is activated. If you set this setting
# to NO, then users will be denied login unless they are explicitly listed in the
# file specified by userlist_file. When login is denied, the denial is issued
# before the user is asked for a password.
# Default: YES
userlist_deny=NO

# If enabled, and vsftpd was compiled with tcp_wrappers support, incoming
# connections will be fed through tcp_wrappers access control. Furthermore,
# there is a mechanism for per-IP based configuration. If tcp_wrappers sets the
# VSFTPD_LOAD_CONF environment variable, then the vsftpd session will try and
# load the vsftpd configuration file specified in this variable.
# Default: NO
tcp_wrappers=YES

# If you have a Linux 2.4 kernel, it is possible to use a different security
# model which only uses one process per connection. It is a less pure security
# model, but gains you performance. You really don't want to enable this unless
# you know what you are doing, and your site supports huge numbers of simultaneously connected users.
# Default: NO
one_process_model=NO


hide_ids=YES
#
# If enabled, vsftpd will try and show session status information in the system
# process listing. In other words, the reported name of the process will change
# to reflect what a vsftpd session is doing (idle, downloading etc).
# You probably want to leave this off for security purposes.
# Default: NO
setproctitle_enable=YES

# If enabled, all non-anonymous logins are classed as "guest" logins.
# A guest login is remapped to the user specified in the guest_username setting.
# Default: NO
guest_enable=NO

# Set to YES if you want only a specified list of e-mail passwords for anonymous
# logins to be accepted. This is useful as a low-hassle way of restricting access
# to low-security content without needing virtual users. When enabled, anonymous
# logins are prevented unless the password provided is listed in the file
# specified by the email_password_file setting. The file format is one password
# per line, no extra whitespace. The default filename is /etc/vsftpd.email_passwords.
# Default: NO
secure_email_list_enable=NO


# Set to YES if you want vsftpd to run as the user which launched vsftpd. This
# is useful where root access is not available. MASSIVE WARNING! Do NOT enable
# this option unless you totally know what you are doing, as naive use of this
# option can create massive security problems. Specifically, vsftpd does not/cannot
# use chroot technology to restrict file access when this option is set
# (even if launched by root). A poor substitute could be to use a deny_file
# setting such as {/*,*..*}, but the reliability of this cannot compare to
# chroot, and should not be relied on. If using this option, many restrictions on
# other options apply. For example, options requiring privilege such as
# non-anonymous logins, upload ownership changing, connecting from port 20
# and listen ports less than 1024 are not expected to work. Other options may be impacted.
# Default: NO
run_as_launching_user=NO

####################
#### Connection # ##
####################

# Max clients vsftpd will allow to have connected.
# Max connects per IP.
max_clients=1
max_per_ip=2

# Make sure PORT transfer connections originate from port 20 (ftp-data).
connect_from_port_20=YES

# The min/max port to allocate for PASV style data connections. Can be used
# to specify a narrow port range to assist firewalling.
# Default: 0 (use any port)
pasv_min_port=1
pasv_max_port=1

# Set to YES if you want to use a hostname (as opposed to IP address) in
# the pasv_address option.
pasv_addr_resolve=NO

# Set to NO if you want to disallow the PASV method of obtaining a data connection.
pasv_enable=YES

# You probably don't want to change this, but try setting it to something
# like 8192 for a much smoother bandwidth limiter.
# Default: 0 (let vsftpd pick a sensible setting)
trans_chunk_size=0

# The timeout, in seconds, for a remote client to establish connection with
# a PASV style data connection.
# Default: 60
accept_timeout=60

# The maximum data transfer rate permitted, in bytes per second, for anonymous clients.
# Default: 0 (Unlimited)
anon_max_rate=0

# After this many login failures, the session is killed.
# Default: 3
max_login_fails=3

# The timeout, in seconds, for a remote client to respond to our PORT style
# data connection.
# Default: 60
connect_timeout=60

# The maximum data transfer rate permitted, in bytes per second, for local authenticated users.
# Default: 0
local_max_rate=0

# The number of seconds to pause prior to reporting a failed login.
# Default: 1
delay_failed_login=1

# The number of seconds to pause prior to allowing a successful login.
# Default: 0
delay_successful_login=0

# Set to YES if you want to disable the PASV security check that ensures the
# data connection originates from the same IP address as the control connection.
# Only enable if you know what you are doing! The only legitimate use for this
# is in some form of secure tunnelling scheme, or perhaps to facilitate FXP support.
pasv_promiscuous=NO

# Set to NO if you want to disallow the PORT method of obtaining a data connection.
port_enable=YES

# Set to YES if you want to disable the PORT security check that ensures that
# outgoing data connections can only connect to the client.
# Only enable if you know what you are doing!
port_promiscuous=NO

# The port from which PORT style connections originate (as long as the poorly
# named connect_from_port_20 is enabled).
ftp_data_port=20

# You may change the value for timing out an idle session. Default is 600.
idle_session_timeout=200

# You may change the value for timing out a data connection. Default is 120.
data_connection_timeout=200

# Enable this and the server will recognise asynchronous ABOR requests. Not
# recommended for security (the code is non-trivial). Not enabling it,
# however, may confuse older FTP clients. Default is "NO"
async_abor_enable=YES

# By default the server will pretend to allow ASCII mode but in fact ignore
# the request. Turn on the below options to have the server actually do ASCII
# mangling on files when in ASCII mode.
# Beware that on some FTP servers, ASCII support allows a denial of service
# attack (DoS) via the command "SIZE /big/file" in ASCII mode. vsftpd
# predicted this attack and has always been safe, reporting the size of the
# raw file.
# ASCII mangling is a horrible feature of the protocol.
# Default is "NO"
ascii_upload_enable=YES
ascii_download_enable=YES


####################
#####  Other  ######
####################
# When configuring directives with the directives hash in the vsftpd puppet module
# they will be specified in this section.
